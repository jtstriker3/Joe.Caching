<#@ template debug="false" hostspecific="false" language="C#" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ output extension=".cs" #>
using System;

namespace Joe.Caching
{
    public partial class Cache
    {

		public void Add<TResult>(String key, TimeSpan duration, Func<TResult> handle)
        {
            this.Add(key, duration, (Delegate)handle);
        }
		public TResult GetOrAdd<TResult>(String key, TimeSpan duration, Func<TResult> handle)
        {
            return (TResult)this.GetOrAdd(key, duration, (Delegate)handle);
        }
<#for(int i = 1; i < 17; i ++){
	var inputGenericString = GetInputGenericString(i);
	var inputArgString = GetInputArgString(i);
	var parameterArgString = GetParameterArgString(i);
#>
		public void Add<<#= inputGenericString#>, TResult>(String key, TimeSpan duration, Func<<#= inputGenericString#>, TResult> handle)
        {
            this.Add(key, duration, (Delegate)handle);
        }
		public TResult GetOrAdd<<#= inputGenericString#>, TResult>(String key, TimeSpan duration, Func<<#= inputGenericString#>, TResult> handle, <#= inputArgString#>)
        {
            return (TResult)this.GetOrAdd(key, duration, (Delegate)handle, <#= parameterArgString#>);
        }
<#}#>
	}
}

<#+
	string GetInputGenericString(int count)
	{
		String returnString = String.Empty;
		for(int i = 1; i <= count; i ++)
		{
			if(i == 1)
				returnString = "T1";
			else
				returnString += ", T" + i;
		}

		return returnString;
	}

	string GetInputArgString(int count)
	{
		String returnString = String.Empty;
		for(int i = 1; i <= count; i ++)
		{
			if(i == 1)
				returnString = "T1 arg1";
			else
				returnString += ", T" + i + " arg" + i;
		}

		return returnString;
	}

	string GetParameterArgString(int count)
	{
		String returnString = String.Empty;
		for(int i = 1; i <= count; i ++)
		{
			if(i == 1)
				returnString = "arg1";
			else
				returnString += ", arg" + i;
		}

		return returnString;
	}
#>